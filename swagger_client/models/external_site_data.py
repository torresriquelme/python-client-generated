# coding: utf-8

"""
    IMDb-API

    The IMDb-API Documentation. You need a <a href='/Identity/Account/Manage' target='_blank'><code>API Key</code></a> for testing APIs.<br/><a class='link' href='/API'>Back to API Tester</a>  # noqa: E501

    OpenAPI spec version: 1.8.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ExternalSiteData(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'im_db_id': 'str',
        'title': 'str',
        'full_title': 'str',
        'type': 'str',
        'year': 'str',
        'official_website': 'str',
        'im_db': 'ExternalSiteItem',
        'the_movie_db': 'ExternalSiteItem',
        'rotten_tomatoes': 'ExternalSiteItem',
        'metacritic': 'ExternalSiteItem',
        'netflix': 'ExternalSiteItem',
        'google_play': 'ExternalSiteItem',
        'film_affinity': 'ExternalSiteItem',
        'freebase': 'ExternalSiteItem',
        'gnd': 'ExternalSiteItem',
        'viaf': 'ExternalSiteItem',
        'allo_cine': 'ExternalSiteItem',
        'all_movie': 'ExternalSiteItem',
        'port': 'ExternalSiteItem',
        'dnf': 'ExternalSiteItem',
        'movie_meter': 'ExternalSiteItem',
        'box_office_mojo': 'ExternalSiteItem',
        'csfd': 'ExternalSiteItem',
        'kinenote': 'ExternalSiteItem',
        'allcinema': 'ExternalSiteItem',
        'kinopoisk': 'ExternalSiteItem',
        'elonet': 'ExternalSiteItem',
        'ldi_f': 'ExternalSiteItem',
        'cineplex': 'ExternalSiteItem',
        'e_db': 'ExternalSiteItem',
        'el_cinema': 'ExternalSiteItem',
        'scope_dk': 'ExternalSiteItem',
        'swedish_film_database_film': 'ExternalSiteItem',
        'el_film': 'ExternalSiteItem',
        'of_db': 'ExternalSiteItem',
        'open_media_database': 'ExternalSiteItem',
        'quora_topic': 'ExternalSiteItem',
        'cinema_de': 'ExternalSiteItem',
        'deutsche_synchronkartei': 'ExternalSiteItem',
        'movie_walker': 'ExternalSiteItem',
        'tv_guide': 'ExternalSiteItem',
        'filmweb_pl': 'ExternalSiteItem',
        'isan': 'ExternalSiteItem',
        'eidr': 'ExternalSiteItem',
        'afi_catalog_of_feature': 'ExternalSiteItem',
        'the_numbers': 'ExternalSiteItem',
        'tcm_movie_database': 'ExternalSiteItem',
        'cine_gr': 'ExternalSiteItem',
        'bfi_national_archive': 'ExternalSiteItem',
        'exploitation_visa': 'ExternalSiteItem',
        'sratim': 'ExternalSiteItem',
        'cine_ressources': 'ExternalSiteItem',
        'cinematheque_quebecoise': 'ExternalSiteItem',
        'encyclopaedia_britannica_online': 'ExternalSiteItem',
        'bechdel_test_movie_list': 'ExternalSiteItem',
        'movieplayer_it': 'ExternalSiteItem',
        'm_ymovies': 'ExternalSiteItem',
        'cinematografo': 'ExternalSiteItem',
        'lumiere': 'ExternalSiteItem',
        'bfi': 'ExternalSiteItem',
        'prisma': 'ExternalSiteItem',
        'cine_magia': 'ExternalSiteItem',
        'daum': 'ExternalSiteItem',
        'douban': 'ExternalSiteItem',
        'museum_of_modern_art': 'ExternalSiteItem',
        'il_mondo_dei_doppiatori': 'ExternalSiteItem',
        'fandango': 'ExternalSiteItem',
        'moviepilot_de': 'ExternalSiteItem',
        'sudoc_authorities': 'ExternalSiteItem',
        'bibliotheque_nationale_de_france': 'ExternalSiteItem',
        'siamzone': 'ExternalSiteItem',
        'academy_awards_database': 'ExternalSiteItem',
        'know_your_meme': 'ExternalSiteItem',
        'the_encyclopedia_of_science_fiction': 'ExternalSiteItem',
        'letterboxd': 'ExternalSiteItem',
        'comic_vine': 'ExternalSiteItem',
        'the_tvdb': 'ExternalSiteItem',
        'tv_spielfilm_series': 'ExternalSiteItem',
        'wikipedia_urls': 'list[LanguageUrl]',
        'error_message': 'str'
    }

    attribute_map = {
        'im_db_id': 'imDbId',
        'title': 'title',
        'full_title': 'fullTitle',
        'type': 'type',
        'year': 'year',
        'official_website': 'officialWebsite',
        'im_db': 'imDb',
        'the_movie_db': 'theMovieDb',
        'rotten_tomatoes': 'rottenTomatoes',
        'metacritic': 'metacritic',
        'netflix': 'netflix',
        'google_play': 'googlePlay',
        'film_affinity': 'filmAffinity',
        'freebase': 'freebase',
        'gnd': 'gnd',
        'viaf': 'viaf',
        'allo_cine': 'alloCine',
        'all_movie': 'allMovie',
        'port': 'port',
        'dnf': 'dnf',
        'movie_meter': 'movieMeter',
        'box_office_mojo': 'boxOfficeMojo',
        'csfd': 'csfd',
        'kinenote': 'kinenote',
        'allcinema': 'allcinema',
        'kinopoisk': 'kinopoisk',
        'elonet': 'elonet',
        'ldi_f': 'ldiF',
        'cineplex': 'cineplex',
        'e_db': 'eDb',
        'el_cinema': 'elCinema',
        'scope_dk': 'scope_dk',
        'swedish_film_database_film': 'swedishFilmDatabaseFilm',
        'el_film': 'elFilm',
        'of_db': 'ofDb',
        'open_media_database': 'openMediaDatabase',
        'quora_topic': 'quoraTopic',
        'cinema_de': 'cinema_de',
        'deutsche_synchronkartei': 'deutscheSynchronkartei',
        'movie_walker': 'movieWalker',
        'tv_guide': 'tvGuide',
        'filmweb_pl': 'filmweb_pl',
        'isan': 'isan',
        'eidr': 'eidr',
        'afi_catalog_of_feature': 'afiCatalogOfFeature',
        'the_numbers': 'theNumbers',
        'tcm_movie_database': 'tcmMovieDatabase',
        'cine_gr': 'cine_gr',
        'bfi_national_archive': 'bfiNationalArchive',
        'exploitation_visa': 'exploitationVisa',
        'sratim': 'sratim',
        'cine_ressources': 'cineRessources',
        'cinematheque_quebecoise': 'cinemathequeQuebecoise',
        'encyclopaedia_britannica_online': 'encyclopaediaBritannicaOnline',
        'bechdel_test_movie_list': 'bechdelTestMovieList',
        'movieplayer_it': 'movieplayer_it',
        'm_ymovies': 'mYmovies',
        'cinematografo': 'cinematografo',
        'lumiere': 'lumiere',
        'bfi': 'bfi',
        'prisma': 'prisma',
        'cine_magia': 'cineMagia',
        'daum': 'daum',
        'douban': 'douban',
        'museum_of_modern_art': 'museumOfModernArt',
        'il_mondo_dei_doppiatori': 'ilMondoDeiDoppiatori',
        'fandango': 'fandango',
        'moviepilot_de': 'moviepilot_de',
        'sudoc_authorities': 'sudocAuthorities',
        'bibliotheque_nationale_de_france': 'bibliothequeNationaleDeFrance',
        'siamzone': 'siamzone',
        'academy_awards_database': 'academyAwardsDatabase',
        'know_your_meme': 'knowYourMeme',
        'the_encyclopedia_of_science_fiction': 'theEncyclopediaOfScienceFiction',
        'letterboxd': 'letterboxd',
        'comic_vine': 'comicVine',
        'the_tvdb': 'theTVDB',
        'tv_spielfilm_series': 'tvSpielfilmSeries',
        'wikipedia_urls': 'wikipediaUrls',
        'error_message': 'errorMessage'
    }

    def __init__(self, im_db_id=None, title=None, full_title=None, type=None, year=None, official_website=None, im_db=None, the_movie_db=None, rotten_tomatoes=None, metacritic=None, netflix=None, google_play=None, film_affinity=None, freebase=None, gnd=None, viaf=None, allo_cine=None, all_movie=None, port=None, dnf=None, movie_meter=None, box_office_mojo=None, csfd=None, kinenote=None, allcinema=None, kinopoisk=None, elonet=None, ldi_f=None, cineplex=None, e_db=None, el_cinema=None, scope_dk=None, swedish_film_database_film=None, el_film=None, of_db=None, open_media_database=None, quora_topic=None, cinema_de=None, deutsche_synchronkartei=None, movie_walker=None, tv_guide=None, filmweb_pl=None, isan=None, eidr=None, afi_catalog_of_feature=None, the_numbers=None, tcm_movie_database=None, cine_gr=None, bfi_national_archive=None, exploitation_visa=None, sratim=None, cine_ressources=None, cinematheque_quebecoise=None, encyclopaedia_britannica_online=None, bechdel_test_movie_list=None, movieplayer_it=None, m_ymovies=None, cinematografo=None, lumiere=None, bfi=None, prisma=None, cine_magia=None, daum=None, douban=None, museum_of_modern_art=None, il_mondo_dei_doppiatori=None, fandango=None, moviepilot_de=None, sudoc_authorities=None, bibliotheque_nationale_de_france=None, siamzone=None, academy_awards_database=None, know_your_meme=None, the_encyclopedia_of_science_fiction=None, letterboxd=None, comic_vine=None, the_tvdb=None, tv_spielfilm_series=None, wikipedia_urls=None, error_message=None):  # noqa: E501
        """ExternalSiteData - a model defined in Swagger"""  # noqa: E501
        self._im_db_id = None
        self._title = None
        self._full_title = None
        self._type = None
        self._year = None
        self._official_website = None
        self._im_db = None
        self._the_movie_db = None
        self._rotten_tomatoes = None
        self._metacritic = None
        self._netflix = None
        self._google_play = None
        self._film_affinity = None
        self._freebase = None
        self._gnd = None
        self._viaf = None
        self._allo_cine = None
        self._all_movie = None
        self._port = None
        self._dnf = None
        self._movie_meter = None
        self._box_office_mojo = None
        self._csfd = None
        self._kinenote = None
        self._allcinema = None
        self._kinopoisk = None
        self._elonet = None
        self._ldi_f = None
        self._cineplex = None
        self._e_db = None
        self._el_cinema = None
        self._scope_dk = None
        self._swedish_film_database_film = None
        self._el_film = None
        self._of_db = None
        self._open_media_database = None
        self._quora_topic = None
        self._cinema_de = None
        self._deutsche_synchronkartei = None
        self._movie_walker = None
        self._tv_guide = None
        self._filmweb_pl = None
        self._isan = None
        self._eidr = None
        self._afi_catalog_of_feature = None
        self._the_numbers = None
        self._tcm_movie_database = None
        self._cine_gr = None
        self._bfi_national_archive = None
        self._exploitation_visa = None
        self._sratim = None
        self._cine_ressources = None
        self._cinematheque_quebecoise = None
        self._encyclopaedia_britannica_online = None
        self._bechdel_test_movie_list = None
        self._movieplayer_it = None
        self._m_ymovies = None
        self._cinematografo = None
        self._lumiere = None
        self._bfi = None
        self._prisma = None
        self._cine_magia = None
        self._daum = None
        self._douban = None
        self._museum_of_modern_art = None
        self._il_mondo_dei_doppiatori = None
        self._fandango = None
        self._moviepilot_de = None
        self._sudoc_authorities = None
        self._bibliotheque_nationale_de_france = None
        self._siamzone = None
        self._academy_awards_database = None
        self._know_your_meme = None
        self._the_encyclopedia_of_science_fiction = None
        self._letterboxd = None
        self._comic_vine = None
        self._the_tvdb = None
        self._tv_spielfilm_series = None
        self._wikipedia_urls = None
        self._error_message = None
        self.discriminator = None
        if im_db_id is not None:
            self.im_db_id = im_db_id
        if title is not None:
            self.title = title
        if full_title is not None:
            self.full_title = full_title
        if type is not None:
            self.type = type
        if year is not None:
            self.year = year
        if official_website is not None:
            self.official_website = official_website
        if im_db is not None:
            self.im_db = im_db
        if the_movie_db is not None:
            self.the_movie_db = the_movie_db
        if rotten_tomatoes is not None:
            self.rotten_tomatoes = rotten_tomatoes
        if metacritic is not None:
            self.metacritic = metacritic
        if netflix is not None:
            self.netflix = netflix
        if google_play is not None:
            self.google_play = google_play
        if film_affinity is not None:
            self.film_affinity = film_affinity
        if freebase is not None:
            self.freebase = freebase
        if gnd is not None:
            self.gnd = gnd
        if viaf is not None:
            self.viaf = viaf
        if allo_cine is not None:
            self.allo_cine = allo_cine
        if all_movie is not None:
            self.all_movie = all_movie
        if port is not None:
            self.port = port
        if dnf is not None:
            self.dnf = dnf
        if movie_meter is not None:
            self.movie_meter = movie_meter
        if box_office_mojo is not None:
            self.box_office_mojo = box_office_mojo
        if csfd is not None:
            self.csfd = csfd
        if kinenote is not None:
            self.kinenote = kinenote
        if allcinema is not None:
            self.allcinema = allcinema
        if kinopoisk is not None:
            self.kinopoisk = kinopoisk
        if elonet is not None:
            self.elonet = elonet
        if ldi_f is not None:
            self.ldi_f = ldi_f
        if cineplex is not None:
            self.cineplex = cineplex
        if e_db is not None:
            self.e_db = e_db
        if el_cinema is not None:
            self.el_cinema = el_cinema
        if scope_dk is not None:
            self.scope_dk = scope_dk
        if swedish_film_database_film is not None:
            self.swedish_film_database_film = swedish_film_database_film
        if el_film is not None:
            self.el_film = el_film
        if of_db is not None:
            self.of_db = of_db
        if open_media_database is not None:
            self.open_media_database = open_media_database
        if quora_topic is not None:
            self.quora_topic = quora_topic
        if cinema_de is not None:
            self.cinema_de = cinema_de
        if deutsche_synchronkartei is not None:
            self.deutsche_synchronkartei = deutsche_synchronkartei
        if movie_walker is not None:
            self.movie_walker = movie_walker
        if tv_guide is not None:
            self.tv_guide = tv_guide
        if filmweb_pl is not None:
            self.filmweb_pl = filmweb_pl
        if isan is not None:
            self.isan = isan
        if eidr is not None:
            self.eidr = eidr
        if afi_catalog_of_feature is not None:
            self.afi_catalog_of_feature = afi_catalog_of_feature
        if the_numbers is not None:
            self.the_numbers = the_numbers
        if tcm_movie_database is not None:
            self.tcm_movie_database = tcm_movie_database
        if cine_gr is not None:
            self.cine_gr = cine_gr
        if bfi_national_archive is not None:
            self.bfi_national_archive = bfi_national_archive
        if exploitation_visa is not None:
            self.exploitation_visa = exploitation_visa
        if sratim is not None:
            self.sratim = sratim
        if cine_ressources is not None:
            self.cine_ressources = cine_ressources
        if cinematheque_quebecoise is not None:
            self.cinematheque_quebecoise = cinematheque_quebecoise
        if encyclopaedia_britannica_online is not None:
            self.encyclopaedia_britannica_online = encyclopaedia_britannica_online
        if bechdel_test_movie_list is not None:
            self.bechdel_test_movie_list = bechdel_test_movie_list
        if movieplayer_it is not None:
            self.movieplayer_it = movieplayer_it
        if m_ymovies is not None:
            self.m_ymovies = m_ymovies
        if cinematografo is not None:
            self.cinematografo = cinematografo
        if lumiere is not None:
            self.lumiere = lumiere
        if bfi is not None:
            self.bfi = bfi
        if prisma is not None:
            self.prisma = prisma
        if cine_magia is not None:
            self.cine_magia = cine_magia
        if daum is not None:
            self.daum = daum
        if douban is not None:
            self.douban = douban
        if museum_of_modern_art is not None:
            self.museum_of_modern_art = museum_of_modern_art
        if il_mondo_dei_doppiatori is not None:
            self.il_mondo_dei_doppiatori = il_mondo_dei_doppiatori
        if fandango is not None:
            self.fandango = fandango
        if moviepilot_de is not None:
            self.moviepilot_de = moviepilot_de
        if sudoc_authorities is not None:
            self.sudoc_authorities = sudoc_authorities
        if bibliotheque_nationale_de_france is not None:
            self.bibliotheque_nationale_de_france = bibliotheque_nationale_de_france
        if siamzone is not None:
            self.siamzone = siamzone
        if academy_awards_database is not None:
            self.academy_awards_database = academy_awards_database
        if know_your_meme is not None:
            self.know_your_meme = know_your_meme
        if the_encyclopedia_of_science_fiction is not None:
            self.the_encyclopedia_of_science_fiction = the_encyclopedia_of_science_fiction
        if letterboxd is not None:
            self.letterboxd = letterboxd
        if comic_vine is not None:
            self.comic_vine = comic_vine
        if the_tvdb is not None:
            self.the_tvdb = the_tvdb
        if tv_spielfilm_series is not None:
            self.tv_spielfilm_series = tv_spielfilm_series
        if wikipedia_urls is not None:
            self.wikipedia_urls = wikipedia_urls
        if error_message is not None:
            self.error_message = error_message

    @property
    def im_db_id(self):
        """Gets the im_db_id of this ExternalSiteData.  # noqa: E501


        :return: The im_db_id of this ExternalSiteData.  # noqa: E501
        :rtype: str
        """
        return self._im_db_id

    @im_db_id.setter
    def im_db_id(self, im_db_id):
        """Sets the im_db_id of this ExternalSiteData.


        :param im_db_id: The im_db_id of this ExternalSiteData.  # noqa: E501
        :type: str
        """

        self._im_db_id = im_db_id

    @property
    def title(self):
        """Gets the title of this ExternalSiteData.  # noqa: E501


        :return: The title of this ExternalSiteData.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ExternalSiteData.


        :param title: The title of this ExternalSiteData.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def full_title(self):
        """Gets the full_title of this ExternalSiteData.  # noqa: E501


        :return: The full_title of this ExternalSiteData.  # noqa: E501
        :rtype: str
        """
        return self._full_title

    @full_title.setter
    def full_title(self, full_title):
        """Sets the full_title of this ExternalSiteData.


        :param full_title: The full_title of this ExternalSiteData.  # noqa: E501
        :type: str
        """

        self._full_title = full_title

    @property
    def type(self):
        """Gets the type of this ExternalSiteData.  # noqa: E501


        :return: The type of this ExternalSiteData.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ExternalSiteData.


        :param type: The type of this ExternalSiteData.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def year(self):
        """Gets the year of this ExternalSiteData.  # noqa: E501


        :return: The year of this ExternalSiteData.  # noqa: E501
        :rtype: str
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this ExternalSiteData.


        :param year: The year of this ExternalSiteData.  # noqa: E501
        :type: str
        """

        self._year = year

    @property
    def official_website(self):
        """Gets the official_website of this ExternalSiteData.  # noqa: E501


        :return: The official_website of this ExternalSiteData.  # noqa: E501
        :rtype: str
        """
        return self._official_website

    @official_website.setter
    def official_website(self, official_website):
        """Sets the official_website of this ExternalSiteData.


        :param official_website: The official_website of this ExternalSiteData.  # noqa: E501
        :type: str
        """

        self._official_website = official_website

    @property
    def im_db(self):
        """Gets the im_db of this ExternalSiteData.  # noqa: E501


        :return: The im_db of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._im_db

    @im_db.setter
    def im_db(self, im_db):
        """Sets the im_db of this ExternalSiteData.


        :param im_db: The im_db of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._im_db = im_db

    @property
    def the_movie_db(self):
        """Gets the the_movie_db of this ExternalSiteData.  # noqa: E501


        :return: The the_movie_db of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._the_movie_db

    @the_movie_db.setter
    def the_movie_db(self, the_movie_db):
        """Sets the the_movie_db of this ExternalSiteData.


        :param the_movie_db: The the_movie_db of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._the_movie_db = the_movie_db

    @property
    def rotten_tomatoes(self):
        """Gets the rotten_tomatoes of this ExternalSiteData.  # noqa: E501


        :return: The rotten_tomatoes of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._rotten_tomatoes

    @rotten_tomatoes.setter
    def rotten_tomatoes(self, rotten_tomatoes):
        """Sets the rotten_tomatoes of this ExternalSiteData.


        :param rotten_tomatoes: The rotten_tomatoes of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._rotten_tomatoes = rotten_tomatoes

    @property
    def metacritic(self):
        """Gets the metacritic of this ExternalSiteData.  # noqa: E501


        :return: The metacritic of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._metacritic

    @metacritic.setter
    def metacritic(self, metacritic):
        """Sets the metacritic of this ExternalSiteData.


        :param metacritic: The metacritic of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._metacritic = metacritic

    @property
    def netflix(self):
        """Gets the netflix of this ExternalSiteData.  # noqa: E501


        :return: The netflix of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._netflix

    @netflix.setter
    def netflix(self, netflix):
        """Sets the netflix of this ExternalSiteData.


        :param netflix: The netflix of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._netflix = netflix

    @property
    def google_play(self):
        """Gets the google_play of this ExternalSiteData.  # noqa: E501


        :return: The google_play of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._google_play

    @google_play.setter
    def google_play(self, google_play):
        """Sets the google_play of this ExternalSiteData.


        :param google_play: The google_play of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._google_play = google_play

    @property
    def film_affinity(self):
        """Gets the film_affinity of this ExternalSiteData.  # noqa: E501


        :return: The film_affinity of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._film_affinity

    @film_affinity.setter
    def film_affinity(self, film_affinity):
        """Sets the film_affinity of this ExternalSiteData.


        :param film_affinity: The film_affinity of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._film_affinity = film_affinity

    @property
    def freebase(self):
        """Gets the freebase of this ExternalSiteData.  # noqa: E501


        :return: The freebase of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._freebase

    @freebase.setter
    def freebase(self, freebase):
        """Sets the freebase of this ExternalSiteData.


        :param freebase: The freebase of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._freebase = freebase

    @property
    def gnd(self):
        """Gets the gnd of this ExternalSiteData.  # noqa: E501


        :return: The gnd of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._gnd

    @gnd.setter
    def gnd(self, gnd):
        """Sets the gnd of this ExternalSiteData.


        :param gnd: The gnd of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._gnd = gnd

    @property
    def viaf(self):
        """Gets the viaf of this ExternalSiteData.  # noqa: E501


        :return: The viaf of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._viaf

    @viaf.setter
    def viaf(self, viaf):
        """Sets the viaf of this ExternalSiteData.


        :param viaf: The viaf of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._viaf = viaf

    @property
    def allo_cine(self):
        """Gets the allo_cine of this ExternalSiteData.  # noqa: E501


        :return: The allo_cine of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._allo_cine

    @allo_cine.setter
    def allo_cine(self, allo_cine):
        """Sets the allo_cine of this ExternalSiteData.


        :param allo_cine: The allo_cine of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._allo_cine = allo_cine

    @property
    def all_movie(self):
        """Gets the all_movie of this ExternalSiteData.  # noqa: E501


        :return: The all_movie of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._all_movie

    @all_movie.setter
    def all_movie(self, all_movie):
        """Sets the all_movie of this ExternalSiteData.


        :param all_movie: The all_movie of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._all_movie = all_movie

    @property
    def port(self):
        """Gets the port of this ExternalSiteData.  # noqa: E501


        :return: The port of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this ExternalSiteData.


        :param port: The port of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._port = port

    @property
    def dnf(self):
        """Gets the dnf of this ExternalSiteData.  # noqa: E501


        :return: The dnf of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._dnf

    @dnf.setter
    def dnf(self, dnf):
        """Sets the dnf of this ExternalSiteData.


        :param dnf: The dnf of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._dnf = dnf

    @property
    def movie_meter(self):
        """Gets the movie_meter of this ExternalSiteData.  # noqa: E501


        :return: The movie_meter of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._movie_meter

    @movie_meter.setter
    def movie_meter(self, movie_meter):
        """Sets the movie_meter of this ExternalSiteData.


        :param movie_meter: The movie_meter of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._movie_meter = movie_meter

    @property
    def box_office_mojo(self):
        """Gets the box_office_mojo of this ExternalSiteData.  # noqa: E501


        :return: The box_office_mojo of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._box_office_mojo

    @box_office_mojo.setter
    def box_office_mojo(self, box_office_mojo):
        """Sets the box_office_mojo of this ExternalSiteData.


        :param box_office_mojo: The box_office_mojo of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._box_office_mojo = box_office_mojo

    @property
    def csfd(self):
        """Gets the csfd of this ExternalSiteData.  # noqa: E501


        :return: The csfd of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._csfd

    @csfd.setter
    def csfd(self, csfd):
        """Sets the csfd of this ExternalSiteData.


        :param csfd: The csfd of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._csfd = csfd

    @property
    def kinenote(self):
        """Gets the kinenote of this ExternalSiteData.  # noqa: E501


        :return: The kinenote of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._kinenote

    @kinenote.setter
    def kinenote(self, kinenote):
        """Sets the kinenote of this ExternalSiteData.


        :param kinenote: The kinenote of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._kinenote = kinenote

    @property
    def allcinema(self):
        """Gets the allcinema of this ExternalSiteData.  # noqa: E501


        :return: The allcinema of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._allcinema

    @allcinema.setter
    def allcinema(self, allcinema):
        """Sets the allcinema of this ExternalSiteData.


        :param allcinema: The allcinema of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._allcinema = allcinema

    @property
    def kinopoisk(self):
        """Gets the kinopoisk of this ExternalSiteData.  # noqa: E501


        :return: The kinopoisk of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._kinopoisk

    @kinopoisk.setter
    def kinopoisk(self, kinopoisk):
        """Sets the kinopoisk of this ExternalSiteData.


        :param kinopoisk: The kinopoisk of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._kinopoisk = kinopoisk

    @property
    def elonet(self):
        """Gets the elonet of this ExternalSiteData.  # noqa: E501


        :return: The elonet of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._elonet

    @elonet.setter
    def elonet(self, elonet):
        """Sets the elonet of this ExternalSiteData.


        :param elonet: The elonet of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._elonet = elonet

    @property
    def ldi_f(self):
        """Gets the ldi_f of this ExternalSiteData.  # noqa: E501


        :return: The ldi_f of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._ldi_f

    @ldi_f.setter
    def ldi_f(self, ldi_f):
        """Sets the ldi_f of this ExternalSiteData.


        :param ldi_f: The ldi_f of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._ldi_f = ldi_f

    @property
    def cineplex(self):
        """Gets the cineplex of this ExternalSiteData.  # noqa: E501


        :return: The cineplex of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._cineplex

    @cineplex.setter
    def cineplex(self, cineplex):
        """Sets the cineplex of this ExternalSiteData.


        :param cineplex: The cineplex of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._cineplex = cineplex

    @property
    def e_db(self):
        """Gets the e_db of this ExternalSiteData.  # noqa: E501


        :return: The e_db of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._e_db

    @e_db.setter
    def e_db(self, e_db):
        """Sets the e_db of this ExternalSiteData.


        :param e_db: The e_db of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._e_db = e_db

    @property
    def el_cinema(self):
        """Gets the el_cinema of this ExternalSiteData.  # noqa: E501


        :return: The el_cinema of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._el_cinema

    @el_cinema.setter
    def el_cinema(self, el_cinema):
        """Sets the el_cinema of this ExternalSiteData.


        :param el_cinema: The el_cinema of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._el_cinema = el_cinema

    @property
    def scope_dk(self):
        """Gets the scope_dk of this ExternalSiteData.  # noqa: E501


        :return: The scope_dk of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._scope_dk

    @scope_dk.setter
    def scope_dk(self, scope_dk):
        """Sets the scope_dk of this ExternalSiteData.


        :param scope_dk: The scope_dk of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._scope_dk = scope_dk

    @property
    def swedish_film_database_film(self):
        """Gets the swedish_film_database_film of this ExternalSiteData.  # noqa: E501


        :return: The swedish_film_database_film of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._swedish_film_database_film

    @swedish_film_database_film.setter
    def swedish_film_database_film(self, swedish_film_database_film):
        """Sets the swedish_film_database_film of this ExternalSiteData.


        :param swedish_film_database_film: The swedish_film_database_film of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._swedish_film_database_film = swedish_film_database_film

    @property
    def el_film(self):
        """Gets the el_film of this ExternalSiteData.  # noqa: E501


        :return: The el_film of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._el_film

    @el_film.setter
    def el_film(self, el_film):
        """Sets the el_film of this ExternalSiteData.


        :param el_film: The el_film of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._el_film = el_film

    @property
    def of_db(self):
        """Gets the of_db of this ExternalSiteData.  # noqa: E501


        :return: The of_db of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._of_db

    @of_db.setter
    def of_db(self, of_db):
        """Sets the of_db of this ExternalSiteData.


        :param of_db: The of_db of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._of_db = of_db

    @property
    def open_media_database(self):
        """Gets the open_media_database of this ExternalSiteData.  # noqa: E501


        :return: The open_media_database of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._open_media_database

    @open_media_database.setter
    def open_media_database(self, open_media_database):
        """Sets the open_media_database of this ExternalSiteData.


        :param open_media_database: The open_media_database of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._open_media_database = open_media_database

    @property
    def quora_topic(self):
        """Gets the quora_topic of this ExternalSiteData.  # noqa: E501


        :return: The quora_topic of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._quora_topic

    @quora_topic.setter
    def quora_topic(self, quora_topic):
        """Sets the quora_topic of this ExternalSiteData.


        :param quora_topic: The quora_topic of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._quora_topic = quora_topic

    @property
    def cinema_de(self):
        """Gets the cinema_de of this ExternalSiteData.  # noqa: E501


        :return: The cinema_de of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._cinema_de

    @cinema_de.setter
    def cinema_de(self, cinema_de):
        """Sets the cinema_de of this ExternalSiteData.


        :param cinema_de: The cinema_de of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._cinema_de = cinema_de

    @property
    def deutsche_synchronkartei(self):
        """Gets the deutsche_synchronkartei of this ExternalSiteData.  # noqa: E501


        :return: The deutsche_synchronkartei of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._deutsche_synchronkartei

    @deutsche_synchronkartei.setter
    def deutsche_synchronkartei(self, deutsche_synchronkartei):
        """Sets the deutsche_synchronkartei of this ExternalSiteData.


        :param deutsche_synchronkartei: The deutsche_synchronkartei of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._deutsche_synchronkartei = deutsche_synchronkartei

    @property
    def movie_walker(self):
        """Gets the movie_walker of this ExternalSiteData.  # noqa: E501


        :return: The movie_walker of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._movie_walker

    @movie_walker.setter
    def movie_walker(self, movie_walker):
        """Sets the movie_walker of this ExternalSiteData.


        :param movie_walker: The movie_walker of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._movie_walker = movie_walker

    @property
    def tv_guide(self):
        """Gets the tv_guide of this ExternalSiteData.  # noqa: E501


        :return: The tv_guide of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._tv_guide

    @tv_guide.setter
    def tv_guide(self, tv_guide):
        """Sets the tv_guide of this ExternalSiteData.


        :param tv_guide: The tv_guide of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._tv_guide = tv_guide

    @property
    def filmweb_pl(self):
        """Gets the filmweb_pl of this ExternalSiteData.  # noqa: E501


        :return: The filmweb_pl of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._filmweb_pl

    @filmweb_pl.setter
    def filmweb_pl(self, filmweb_pl):
        """Sets the filmweb_pl of this ExternalSiteData.


        :param filmweb_pl: The filmweb_pl of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._filmweb_pl = filmweb_pl

    @property
    def isan(self):
        """Gets the isan of this ExternalSiteData.  # noqa: E501


        :return: The isan of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._isan

    @isan.setter
    def isan(self, isan):
        """Sets the isan of this ExternalSiteData.


        :param isan: The isan of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._isan = isan

    @property
    def eidr(self):
        """Gets the eidr of this ExternalSiteData.  # noqa: E501


        :return: The eidr of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._eidr

    @eidr.setter
    def eidr(self, eidr):
        """Sets the eidr of this ExternalSiteData.


        :param eidr: The eidr of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._eidr = eidr

    @property
    def afi_catalog_of_feature(self):
        """Gets the afi_catalog_of_feature of this ExternalSiteData.  # noqa: E501


        :return: The afi_catalog_of_feature of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._afi_catalog_of_feature

    @afi_catalog_of_feature.setter
    def afi_catalog_of_feature(self, afi_catalog_of_feature):
        """Sets the afi_catalog_of_feature of this ExternalSiteData.


        :param afi_catalog_of_feature: The afi_catalog_of_feature of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._afi_catalog_of_feature = afi_catalog_of_feature

    @property
    def the_numbers(self):
        """Gets the the_numbers of this ExternalSiteData.  # noqa: E501


        :return: The the_numbers of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._the_numbers

    @the_numbers.setter
    def the_numbers(self, the_numbers):
        """Sets the the_numbers of this ExternalSiteData.


        :param the_numbers: The the_numbers of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._the_numbers = the_numbers

    @property
    def tcm_movie_database(self):
        """Gets the tcm_movie_database of this ExternalSiteData.  # noqa: E501


        :return: The tcm_movie_database of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._tcm_movie_database

    @tcm_movie_database.setter
    def tcm_movie_database(self, tcm_movie_database):
        """Sets the tcm_movie_database of this ExternalSiteData.


        :param tcm_movie_database: The tcm_movie_database of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._tcm_movie_database = tcm_movie_database

    @property
    def cine_gr(self):
        """Gets the cine_gr of this ExternalSiteData.  # noqa: E501


        :return: The cine_gr of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._cine_gr

    @cine_gr.setter
    def cine_gr(self, cine_gr):
        """Sets the cine_gr of this ExternalSiteData.


        :param cine_gr: The cine_gr of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._cine_gr = cine_gr

    @property
    def bfi_national_archive(self):
        """Gets the bfi_national_archive of this ExternalSiteData.  # noqa: E501


        :return: The bfi_national_archive of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._bfi_national_archive

    @bfi_national_archive.setter
    def bfi_national_archive(self, bfi_national_archive):
        """Sets the bfi_national_archive of this ExternalSiteData.


        :param bfi_national_archive: The bfi_national_archive of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._bfi_national_archive = bfi_national_archive

    @property
    def exploitation_visa(self):
        """Gets the exploitation_visa of this ExternalSiteData.  # noqa: E501


        :return: The exploitation_visa of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._exploitation_visa

    @exploitation_visa.setter
    def exploitation_visa(self, exploitation_visa):
        """Sets the exploitation_visa of this ExternalSiteData.


        :param exploitation_visa: The exploitation_visa of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._exploitation_visa = exploitation_visa

    @property
    def sratim(self):
        """Gets the sratim of this ExternalSiteData.  # noqa: E501


        :return: The sratim of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._sratim

    @sratim.setter
    def sratim(self, sratim):
        """Sets the sratim of this ExternalSiteData.


        :param sratim: The sratim of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._sratim = sratim

    @property
    def cine_ressources(self):
        """Gets the cine_ressources of this ExternalSiteData.  # noqa: E501


        :return: The cine_ressources of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._cine_ressources

    @cine_ressources.setter
    def cine_ressources(self, cine_ressources):
        """Sets the cine_ressources of this ExternalSiteData.


        :param cine_ressources: The cine_ressources of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._cine_ressources = cine_ressources

    @property
    def cinematheque_quebecoise(self):
        """Gets the cinematheque_quebecoise of this ExternalSiteData.  # noqa: E501


        :return: The cinematheque_quebecoise of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._cinematheque_quebecoise

    @cinematheque_quebecoise.setter
    def cinematheque_quebecoise(self, cinematheque_quebecoise):
        """Sets the cinematheque_quebecoise of this ExternalSiteData.


        :param cinematheque_quebecoise: The cinematheque_quebecoise of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._cinematheque_quebecoise = cinematheque_quebecoise

    @property
    def encyclopaedia_britannica_online(self):
        """Gets the encyclopaedia_britannica_online of this ExternalSiteData.  # noqa: E501


        :return: The encyclopaedia_britannica_online of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._encyclopaedia_britannica_online

    @encyclopaedia_britannica_online.setter
    def encyclopaedia_britannica_online(self, encyclopaedia_britannica_online):
        """Sets the encyclopaedia_britannica_online of this ExternalSiteData.


        :param encyclopaedia_britannica_online: The encyclopaedia_britannica_online of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._encyclopaedia_britannica_online = encyclopaedia_britannica_online

    @property
    def bechdel_test_movie_list(self):
        """Gets the bechdel_test_movie_list of this ExternalSiteData.  # noqa: E501


        :return: The bechdel_test_movie_list of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._bechdel_test_movie_list

    @bechdel_test_movie_list.setter
    def bechdel_test_movie_list(self, bechdel_test_movie_list):
        """Sets the bechdel_test_movie_list of this ExternalSiteData.


        :param bechdel_test_movie_list: The bechdel_test_movie_list of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._bechdel_test_movie_list = bechdel_test_movie_list

    @property
    def movieplayer_it(self):
        """Gets the movieplayer_it of this ExternalSiteData.  # noqa: E501


        :return: The movieplayer_it of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._movieplayer_it

    @movieplayer_it.setter
    def movieplayer_it(self, movieplayer_it):
        """Sets the movieplayer_it of this ExternalSiteData.


        :param movieplayer_it: The movieplayer_it of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._movieplayer_it = movieplayer_it

    @property
    def m_ymovies(self):
        """Gets the m_ymovies of this ExternalSiteData.  # noqa: E501


        :return: The m_ymovies of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._m_ymovies

    @m_ymovies.setter
    def m_ymovies(self, m_ymovies):
        """Sets the m_ymovies of this ExternalSiteData.


        :param m_ymovies: The m_ymovies of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._m_ymovies = m_ymovies

    @property
    def cinematografo(self):
        """Gets the cinematografo of this ExternalSiteData.  # noqa: E501


        :return: The cinematografo of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._cinematografo

    @cinematografo.setter
    def cinematografo(self, cinematografo):
        """Sets the cinematografo of this ExternalSiteData.


        :param cinematografo: The cinematografo of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._cinematografo = cinematografo

    @property
    def lumiere(self):
        """Gets the lumiere of this ExternalSiteData.  # noqa: E501


        :return: The lumiere of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._lumiere

    @lumiere.setter
    def lumiere(self, lumiere):
        """Sets the lumiere of this ExternalSiteData.


        :param lumiere: The lumiere of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._lumiere = lumiere

    @property
    def bfi(self):
        """Gets the bfi of this ExternalSiteData.  # noqa: E501


        :return: The bfi of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._bfi

    @bfi.setter
    def bfi(self, bfi):
        """Sets the bfi of this ExternalSiteData.


        :param bfi: The bfi of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._bfi = bfi

    @property
    def prisma(self):
        """Gets the prisma of this ExternalSiteData.  # noqa: E501


        :return: The prisma of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._prisma

    @prisma.setter
    def prisma(self, prisma):
        """Sets the prisma of this ExternalSiteData.


        :param prisma: The prisma of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._prisma = prisma

    @property
    def cine_magia(self):
        """Gets the cine_magia of this ExternalSiteData.  # noqa: E501


        :return: The cine_magia of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._cine_magia

    @cine_magia.setter
    def cine_magia(self, cine_magia):
        """Sets the cine_magia of this ExternalSiteData.


        :param cine_magia: The cine_magia of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._cine_magia = cine_magia

    @property
    def daum(self):
        """Gets the daum of this ExternalSiteData.  # noqa: E501


        :return: The daum of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._daum

    @daum.setter
    def daum(self, daum):
        """Sets the daum of this ExternalSiteData.


        :param daum: The daum of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._daum = daum

    @property
    def douban(self):
        """Gets the douban of this ExternalSiteData.  # noqa: E501


        :return: The douban of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._douban

    @douban.setter
    def douban(self, douban):
        """Sets the douban of this ExternalSiteData.


        :param douban: The douban of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._douban = douban

    @property
    def museum_of_modern_art(self):
        """Gets the museum_of_modern_art of this ExternalSiteData.  # noqa: E501


        :return: The museum_of_modern_art of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._museum_of_modern_art

    @museum_of_modern_art.setter
    def museum_of_modern_art(self, museum_of_modern_art):
        """Sets the museum_of_modern_art of this ExternalSiteData.


        :param museum_of_modern_art: The museum_of_modern_art of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._museum_of_modern_art = museum_of_modern_art

    @property
    def il_mondo_dei_doppiatori(self):
        """Gets the il_mondo_dei_doppiatori of this ExternalSiteData.  # noqa: E501


        :return: The il_mondo_dei_doppiatori of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._il_mondo_dei_doppiatori

    @il_mondo_dei_doppiatori.setter
    def il_mondo_dei_doppiatori(self, il_mondo_dei_doppiatori):
        """Sets the il_mondo_dei_doppiatori of this ExternalSiteData.


        :param il_mondo_dei_doppiatori: The il_mondo_dei_doppiatori of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._il_mondo_dei_doppiatori = il_mondo_dei_doppiatori

    @property
    def fandango(self):
        """Gets the fandango of this ExternalSiteData.  # noqa: E501


        :return: The fandango of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._fandango

    @fandango.setter
    def fandango(self, fandango):
        """Sets the fandango of this ExternalSiteData.


        :param fandango: The fandango of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._fandango = fandango

    @property
    def moviepilot_de(self):
        """Gets the moviepilot_de of this ExternalSiteData.  # noqa: E501


        :return: The moviepilot_de of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._moviepilot_de

    @moviepilot_de.setter
    def moviepilot_de(self, moviepilot_de):
        """Sets the moviepilot_de of this ExternalSiteData.


        :param moviepilot_de: The moviepilot_de of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._moviepilot_de = moviepilot_de

    @property
    def sudoc_authorities(self):
        """Gets the sudoc_authorities of this ExternalSiteData.  # noqa: E501


        :return: The sudoc_authorities of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._sudoc_authorities

    @sudoc_authorities.setter
    def sudoc_authorities(self, sudoc_authorities):
        """Sets the sudoc_authorities of this ExternalSiteData.


        :param sudoc_authorities: The sudoc_authorities of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._sudoc_authorities = sudoc_authorities

    @property
    def bibliotheque_nationale_de_france(self):
        """Gets the bibliotheque_nationale_de_france of this ExternalSiteData.  # noqa: E501


        :return: The bibliotheque_nationale_de_france of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._bibliotheque_nationale_de_france

    @bibliotheque_nationale_de_france.setter
    def bibliotheque_nationale_de_france(self, bibliotheque_nationale_de_france):
        """Sets the bibliotheque_nationale_de_france of this ExternalSiteData.


        :param bibliotheque_nationale_de_france: The bibliotheque_nationale_de_france of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._bibliotheque_nationale_de_france = bibliotheque_nationale_de_france

    @property
    def siamzone(self):
        """Gets the siamzone of this ExternalSiteData.  # noqa: E501


        :return: The siamzone of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._siamzone

    @siamzone.setter
    def siamzone(self, siamzone):
        """Sets the siamzone of this ExternalSiteData.


        :param siamzone: The siamzone of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._siamzone = siamzone

    @property
    def academy_awards_database(self):
        """Gets the academy_awards_database of this ExternalSiteData.  # noqa: E501


        :return: The academy_awards_database of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._academy_awards_database

    @academy_awards_database.setter
    def academy_awards_database(self, academy_awards_database):
        """Sets the academy_awards_database of this ExternalSiteData.


        :param academy_awards_database: The academy_awards_database of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._academy_awards_database = academy_awards_database

    @property
    def know_your_meme(self):
        """Gets the know_your_meme of this ExternalSiteData.  # noqa: E501


        :return: The know_your_meme of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._know_your_meme

    @know_your_meme.setter
    def know_your_meme(self, know_your_meme):
        """Sets the know_your_meme of this ExternalSiteData.


        :param know_your_meme: The know_your_meme of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._know_your_meme = know_your_meme

    @property
    def the_encyclopedia_of_science_fiction(self):
        """Gets the the_encyclopedia_of_science_fiction of this ExternalSiteData.  # noqa: E501


        :return: The the_encyclopedia_of_science_fiction of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._the_encyclopedia_of_science_fiction

    @the_encyclopedia_of_science_fiction.setter
    def the_encyclopedia_of_science_fiction(self, the_encyclopedia_of_science_fiction):
        """Sets the the_encyclopedia_of_science_fiction of this ExternalSiteData.


        :param the_encyclopedia_of_science_fiction: The the_encyclopedia_of_science_fiction of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._the_encyclopedia_of_science_fiction = the_encyclopedia_of_science_fiction

    @property
    def letterboxd(self):
        """Gets the letterboxd of this ExternalSiteData.  # noqa: E501


        :return: The letterboxd of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._letterboxd

    @letterboxd.setter
    def letterboxd(self, letterboxd):
        """Sets the letterboxd of this ExternalSiteData.


        :param letterboxd: The letterboxd of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._letterboxd = letterboxd

    @property
    def comic_vine(self):
        """Gets the comic_vine of this ExternalSiteData.  # noqa: E501


        :return: The comic_vine of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._comic_vine

    @comic_vine.setter
    def comic_vine(self, comic_vine):
        """Sets the comic_vine of this ExternalSiteData.


        :param comic_vine: The comic_vine of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._comic_vine = comic_vine

    @property
    def the_tvdb(self):
        """Gets the the_tvdb of this ExternalSiteData.  # noqa: E501


        :return: The the_tvdb of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._the_tvdb

    @the_tvdb.setter
    def the_tvdb(self, the_tvdb):
        """Sets the the_tvdb of this ExternalSiteData.


        :param the_tvdb: The the_tvdb of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._the_tvdb = the_tvdb

    @property
    def tv_spielfilm_series(self):
        """Gets the tv_spielfilm_series of this ExternalSiteData.  # noqa: E501


        :return: The tv_spielfilm_series of this ExternalSiteData.  # noqa: E501
        :rtype: ExternalSiteItem
        """
        return self._tv_spielfilm_series

    @tv_spielfilm_series.setter
    def tv_spielfilm_series(self, tv_spielfilm_series):
        """Sets the tv_spielfilm_series of this ExternalSiteData.


        :param tv_spielfilm_series: The tv_spielfilm_series of this ExternalSiteData.  # noqa: E501
        :type: ExternalSiteItem
        """

        self._tv_spielfilm_series = tv_spielfilm_series

    @property
    def wikipedia_urls(self):
        """Gets the wikipedia_urls of this ExternalSiteData.  # noqa: E501


        :return: The wikipedia_urls of this ExternalSiteData.  # noqa: E501
        :rtype: list[LanguageUrl]
        """
        return self._wikipedia_urls

    @wikipedia_urls.setter
    def wikipedia_urls(self, wikipedia_urls):
        """Sets the wikipedia_urls of this ExternalSiteData.


        :param wikipedia_urls: The wikipedia_urls of this ExternalSiteData.  # noqa: E501
        :type: list[LanguageUrl]
        """

        self._wikipedia_urls = wikipedia_urls

    @property
    def error_message(self):
        """Gets the error_message of this ExternalSiteData.  # noqa: E501


        :return: The error_message of this ExternalSiteData.  # noqa: E501
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this ExternalSiteData.


        :param error_message: The error_message of this ExternalSiteData.  # noqa: E501
        :type: str
        """

        self._error_message = error_message

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ExternalSiteData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ExternalSiteData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
